Index.PACKAGES = {"pt.tecnico.dsi" : [], "pt.tecnico" : [], "pt.tecnico.dsi.openstack.common" : [], "pt.tecnico.dsi.openstack.common.models" : [{"name" : "pt.tecnico.dsi.openstack.common.models.Identifiable", "trait" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html", "kind" : "trait", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Identifiable) => Boolean, msg: => Any): Identifiable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Identifiable) => Boolean): Identifiable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Identifiable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Identifiable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Identifiable, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Identifiable, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "linksMap", "tail" : ": Map[String, Uri]", "member" : "pt.tecnico.dsi.openstack.common.models.Identifiable.linksMap", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#linksMap:Map[String,org.http4s.Uri]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "links", "tail" : "(): List[Link]", "member" : "pt.tecnico.dsi.openstack.common.models.Identifiable.links", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#links:List[pt.tecnico.dsi.openstack.common.models.Link]", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): String", "member" : "pt.tecnico.dsi.openstack.common.models.Identifiable.id", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Identifiable.html#id:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "pt.tecnico.dsi.openstack.common.models.Link", "shortDescription" : "", "object" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html", "members_object" : [{"label" : "showFoo", "tail" : ": Show[Link]", "member" : "pt.tecnico.dsi.openstack.common.models.Link.showFoo", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#showFoo:cats.Show[pt.tecnico.dsi.openstack.common.models.Link]", "kind" : "implicit val"}, {"label" : "linksDecoder", "tail" : ": Decoder[List[Link]]", "member" : "pt.tecnico.dsi.openstack.common.models.Link.linksDecoder", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#linksDecoder:io.circe.Decoder[List[pt.tecnico.dsi.openstack.common.models.Link]]", "kind" : "implicit val"}, {"label" : "codec", "tail" : ": AsObject[Link]", "member" : "pt.tecnico.dsi.openstack.common.models.Link.codec", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#codec:io.circe.Codec.AsObject[pt.tecnico.dsi.openstack.common.models.Link]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Link) => Boolean, msg: => Any): Link", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Link) => Boolean): Link", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Link", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Link", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Link, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Link, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.openstack.common.models.Link#<init>", "error" : "unsupported entity"}, {"label" : "href", "tail" : ": Uri", "member" : "pt.tecnico.dsi.openstack.common.models.Link.href", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#href:org.http4s.Uri", "kind" : "val"}, {"label" : "rel", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.models.Link.rel", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#rel:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Link.html", "kind" : "object"}, {"name" : "pt.tecnico.dsi.openstack.common.models.UnexpectedStatus", "shortDescription" : "", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnexpectedStatus) => Boolean, msg: => Any): UnexpectedStatus", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnexpectedStatus) => Boolean): UnexpectedStatus", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): UnexpectedStatus", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): UnexpectedStatus", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (UnexpectedStatus, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (UnexpectedStatus, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "pt.tecnico.dsi.openstack.common.models.UnexpectedStatus.getMessage", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#getMessage():String", "kind" : "def"}, {"member" : "pt.tecnico.dsi.openstack.common.models.UnexpectedStatus#<init>", "error" : "unsupported entity"}, {"label" : "body", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.models.UnexpectedStatus.body", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#body:String", "kind" : "val"}, {"label" : "status", "tail" : ": Status", "member" : "pt.tecnico.dsi.openstack.common.models.UnexpectedStatus.status", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#status:org.http4s.Status", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "scala.util.control.NoStackTrace.fillInStackTrace", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "pt\/tecnico\/dsi\/openstack\/common\/models\/UnexpectedStatus.html", "kind" : "case class"}, {"name" : "pt.tecnico.dsi.openstack.common.models.Usage", "shortDescription" : "", "object" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html", "members_object" : [{"label" : "decoder", "tail" : "(arg0: Decoder[T]): Decoder[Usage[T]]", "member" : "pt.tecnico.dsi.openstack.common.models.Usage.decoder", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#decoder[T](implicitevidence$1:io.circe.Decoder[T]):io.circe.Decoder[pt.tecnico.dsi.openstack.common.models.Usage[T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Usage[T]) => Boolean, msg: => Any): Usage[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Usage[T]) => Boolean): Usage[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Usage[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Usage[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Usage[T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Usage[T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "pt.tecnico.dsi.openstack.common.models.Usage#<init>", "error" : "unsupported entity"}, {"label" : "allocated", "tail" : ": Option[T]", "member" : "pt.tecnico.dsi.openstack.common.models.Usage.allocated", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#allocated:Option[T]", "kind" : "val"}, {"label" : "reserved", "tail" : ": T", "member" : "pt.tecnico.dsi.openstack.common.models.Usage.reserved", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#reserved:T", "kind" : "val"}, {"label" : "limit", "tail" : ": T", "member" : "pt.tecnico.dsi.openstack.common.models.Usage.limit", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#limit:T", "kind" : "val"}, {"label" : "inUse", "tail" : ": T", "member" : "pt.tecnico.dsi.openstack.common.models.Usage.inUse", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#inUse:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "pt\/tecnico\/dsi\/openstack\/common\/models\/Usage.html", "kind" : "object"}], "pt.tecnico.dsi.openstack" : [], "pt" : [], "pt.tecnico.dsi.openstack.common.services" : [{"name" : "pt.tecnico.dsi.openstack.common.services.CrudService", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CrudService[F, Model, Create, Update]) => Boolean, msg: => Any): CrudService[F, Model, Create, Update]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CrudService[F, Model, Create, Update]) => Boolean): CrudService[F, Model, Create, Update]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CrudService[F, Model, Create, Update]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CrudService[F, Model, Create, Update]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CrudService[F, Model, Create, Update], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CrudService[F, Model, Create, Update], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, update: Update, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#apply(id:String,update:Update,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "apply", "tail" : "(create: Create, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#apply(create:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "delete", "tail" : "(id: String, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#delete(id:String,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(model: Model, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.delete", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#delete(model:Model,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "update", "tail" : "(id: String, update: Update, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.update", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#update(id:String,update:Update,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: String, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.apply", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#apply(id:String,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "get", "tail" : "(id: String, extraHeaders: Header*): F[Option[Model]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.get", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#get(id:String,extraHeaders:org.http4s.Header*):F[Option[Model]]", "kind" : "def"}, {"label" : "createHandleConflictWithError", "tail" : "(create: Create, uri: Uri, extraHeaders: Seq[Header])(onConflict: \/=>[E, F[Model]])(arg0: Decoder[E]): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createHandleConflictWithError", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#createHandleConflictWithError[E<:Throwable](create:Create,uri:org.http4s.Uri,extraHeaders:Seq[org.http4s.Header])(onConflict:E\/=>F[Model])(implicitevidence$3:io.circe.Decoder[E]):F[Model]", "kind" : "def"}, {"label" : "createHandleConflict", "tail" : "(create: Create, uri: Uri, extraHeaders: Seq[Header])(onConflict: F[Model]): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createHandleConflict", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#createHandleConflict(create:Create,uri:org.http4s.Uri,extraHeaders:Seq[org.http4s.Header])(onConflict:F[Model]):F[Model]", "kind" : "def"}, {"label" : "createOrUpdate", "tail" : "(create: Create, keepExistingElements: Boolean, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createOrUpdate", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#createOrUpdate(create:Create,keepExistingElements:Boolean,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "createOrUpdate", "tail" : "(create: Create, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createOrUpdate", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#createOrUpdate(create:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "create", "tail" : "(create: Create, extraHeaders: Header*): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.create", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#create(create:Create,extraHeaders:org.http4s.Header*):F[Model]", "kind" : "def"}, {"label" : "list", "tail" : "(query: Query, extraHeaders: Header*): F[List[Model]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#list(query:org.http4s.Query,extraHeaders:org.http4s.Header*):F[List[Model]]", "kind" : "def"}, {"label" : "list", "tail" : "(pairs: (String, String)*): F[List[Model]]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.list", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#list(pairs:(String,String)*):F[List[Model]]", "kind" : "def"}, {"label" : "stream", "tail" : "(query: Query, extraHeaders: Header*): Stream[F, Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.stream", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#stream(query:org.http4s.Query,extraHeaders:org.http4s.Header*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "stream", "tail" : "(pairs: (String, String)*): Stream[F, Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.stream", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#stream(pairs:(String,String)*):fs2.Stream[F,Model]", "kind" : "def"}, {"label" : "wrappedAt", "tail" : ": Option[String]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.wrappedAt", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#wrappedAt:Option[String]", "kind" : "val"}, {"label" : "uri", "tail" : ": Uri", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.uri", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#uri:org.http4s.Uri", "kind" : "val"}, {"label" : "pluralName", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.pluralName", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#pluralName:String", "kind" : "val"}, {"member" : "pt.tecnico.dsi.openstack.common.services.CrudService#<init>", "error" : "unsupported entity"}, {"label" : "updateEncoder", "tail" : ": Encoder[Update]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.updateEncoder", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#updateEncoder:io.circe.Encoder[Update]", "kind" : "implicit val"}, {"label" : "createEncoder", "tail" : ": Encoder[Create]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createEncoder", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#createEncoder:io.circe.Encoder[Create]", "kind" : "implicit val"}, {"label" : "modelDecoder", "tail" : ": Decoder[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.modelDecoder", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#modelDecoder:io.circe.Decoder[Model]", "kind" : "implicit val"}, {"label" : "name", "tail" : ": String", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.name", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#name:String", "kind" : "val"}, {"label" : "defaultOnError", "tail" : "(response: Response[F]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.defaultOnError", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#defaultOnError[R](response:org.http4s.Response[F]):F[R]", "kind" : "def"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[List[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#list[R](wrappedAt:String,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$25:io.circe.Decoder[R]):F[List[R]]", "kind" : "def"}, {"label" : "stream", "tail" : "(wrappedAt: String, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.stream", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#stream[R](wrappedAt:String,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$24:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflictWithError", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Seq[Header])(onConflict: \/=>[E, F[R]])(arg0: Encoder[V], arg1: Decoder[R], arg2: Decoder[E]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflictWithError", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#postHandleConflictWithError[V,R,E<:Throwable](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:Seq[org.http4s.Header])(onConflict:E\/=>F[R])(implicitevidence$21:io.circe.Encoder[V],implicitevidence$22:io.circe.Decoder[R],implicitevidence$23:io.circe.Decoder[E]):F[R]", "kind" : "def"}, {"label" : "\/=>", "tail" : "", "member" : "pt.tecnico.dsi.openstack.common.services.Service.\/=>", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#\/=>[-T,+R]=PartialFunction[T,R]", "kind" : "type"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Seq[Header])(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:Seq[org.http4s.Header])(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Method,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#expect[R](wrappedAt:Option[String],method:org.http4s.Method,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Method,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method, value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#expect[V,R](wrappedAt:Option[String],method:org.http4s.Method,value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[V],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createOrUpdate", "tail" : "(create: Create, keepExistingElements: Boolean, extraHeaders: Seq[Header])(resolveConflict: (Model, Create) => F[Model]): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.createOrUpdate", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#createOrUpdate(create:Create,keepExistingElements:Boolean,extraHeaders:Seq[org.http4s.Header])(resolveConflict:(Model,Create)=>F[Model]):F[Model]", "kind" : "abstract def"}, {"label" : "defaultResolveConflict", "tail" : "(existing: Model, create: Create, keepExistingElements: Boolean, extraHeaders: Seq[Header]): F[Model]", "member" : "pt.tecnico.dsi.openstack.common.services.CrudService.defaultResolveConflict", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html#defaultResolveConflict(existing:Model,create:Create,keepExistingElements:Boolean,extraHeaders:Seq[org.http4s.Header]):F[Model]", "kind" : "abstract def"}], "class" : "pt\/tecnico\/dsi\/openstack\/common\/services\/CrudService.html", "kind" : "class"}, {"name" : "pt.tecnico.dsi.openstack.common.services.Service", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Service[F]) => Boolean, msg: => Any): Service[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Service[F]) => Boolean): Service[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Service[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Service[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Service[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Service[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "defaultOnError", "tail" : "(response: Response[F]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.defaultOnError", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#defaultOnError[R](response:org.http4s.Response[F]):F[R]", "kind" : "def"}, {"label" : "delete", "tail" : "(uri: Uri, extraHeaders: Header*): F[Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.delete", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#delete(uri:org.http4s.Uri,extraHeaders:org.http4s.Header*):F[Unit]", "kind" : "def"}, {"label" : "list", "tail" : "(wrappedAt: String, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[List[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.list", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#list[R](wrappedAt:String,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$25:io.circe.Decoder[R]):F[List[R]]", "kind" : "def"}, {"label" : "stream", "tail" : "(wrappedAt: String, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): Stream[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.stream", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#stream[R](wrappedAt:String,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$24:io.circe.Decoder[R]):fs2.Stream[F,R]", "kind" : "def"}, {"label" : "postHandleConflictWithError", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Seq[Header])(onConflict: \/=>[E, F[R]])(arg0: Encoder[V], arg1: Decoder[R], arg2: Decoder[E]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflictWithError", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#postHandleConflictWithError[V,R,E<:Throwable](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:Seq[org.http4s.Header])(onConflict:E\/=>F[R])(implicitevidence$21:io.circe.Encoder[V],implicitevidence$22:io.circe.Decoder[R],implicitevidence$23:io.circe.Decoder[E]):F[R]", "kind" : "def"}, {"label" : "\/=>", "tail" : "", "member" : "pt.tecnico.dsi.openstack.common.services.Service.\/=>", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#\/=>[-T,+R]=PartialFunction[T,R]", "kind" : "type"}, {"label" : "postHandleConflict", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Seq[Header])(onConflict: F[R])(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.postHandleConflict", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#postHandleConflict[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:Seq[org.http4s.Header])(onConflict:F[R])(implicitevidence$19:io.circe.Encoder[V],implicitevidence$20:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "post", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.post", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#post[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$17:io.circe.Encoder[V],implicitevidence$18:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "patch", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.patch", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#patch[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$15:io.circe.Encoder[V],implicitevidence$16:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "put", "tail" : "(wrappedAt: Option[String], value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.put", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#put[V,R](wrappedAt:Option[String],value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$13:io.circe.Encoder[V],implicitevidence$14:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "getOption", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.getOption", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#getOption[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$12:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "get", "tail" : "(wrappedAt: Option[String], uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.get", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#get[R](wrappedAt:Option[String],uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$11:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#expectOption[R](wrappedAt:Option[String],method:org.http4s.Method,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$10:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method, uri: Uri, extraHeaders: Header*)(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#expect[R](wrappedAt:Option[String],method:org.http4s.Method,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$9:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOption", "tail" : "(wrappedAt: Option[String], method: Method, value: B, uri: Uri, extraHeaders: Header*)(arg0: Encoder[B], arg1: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOption", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#expectOption[B,R](wrappedAt:Option[String],method:org.http4s.Method,value:B,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$7:io.circe.Encoder[B],implicitevidence$8:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expect", "tail" : "(wrappedAt: Option[String], method: Method, value: V, uri: Uri, extraHeaders: Header*)(arg0: Encoder[V], arg1: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expect", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#expect[V,R](wrappedAt:Option[String],method:org.http4s.Method,value:V,uri:org.http4s.Uri,extraHeaders:org.http4s.Header*)(implicitevidence$5:io.circe.Encoder[V],implicitevidence$6:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "expectOptionUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[Option[R]]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectOptionUnwrapped", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#expectOptionUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$4:io.circe.Decoder[R]):F[Option[R]]", "kind" : "def"}, {"label" : "expectUnwrapped", "tail" : "(wrappedAt: Option[String], request: F[Request[F]])(arg0: Decoder[R]): F[R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.expectUnwrapped", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#expectUnwrapped[R](wrappedAt:Option[String],request:F[org.http4s.Request[F]])(implicitevidence$3:io.circe.Decoder[R]):F[R]", "kind" : "def"}, {"label" : "wrapped", "tail" : "(at: Option[String])(encoder: Encoder[R]): EntityEncoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.wrapped", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#wrapped[R](at:Option[String])(implicitencoder:io.circe.Encoder[R]):org.http4s.EntityEncoder[F,R]", "kind" : "def"}, {"label" : "unwrapped", "tail" : "(at: Option[String])(decoder: Decoder[R]): EntityDecoder[F, R]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.unwrapped", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#unwrapped[R](at:Option[String])(implicitdecoder:io.circe.Decoder[R]):org.http4s.EntityDecoder[F,R]", "kind" : "def"}, {"label" : "void", "tail" : ": EntityDecoder[F, Unit]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.void", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#void:org.http4s.EntityDecoder[F,Unit]", "kind" : "implicit val"}, {"label" : "jsonDecoder", "tail" : "(arg0: Decoder[A]): EntityDecoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonDecoder", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#jsonDecoder[A](implicitevidence$2:io.circe.Decoder[A]):org.http4s.EntityDecoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonEncoder", "tail" : "(arg0: Encoder[A]): EntityEncoder[F, A]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonEncoder", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#jsonEncoder[A](implicitevidence$1:io.circe.Encoder[A]):org.http4s.EntityEncoder[F,A]", "kind" : "implicit def"}, {"label" : "jsonPrinter", "tail" : ": Printer", "member" : "pt.tecnico.dsi.openstack.common.services.Service.jsonPrinter", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#jsonPrinter:io.circe.Printer", "kind" : "val"}, {"label" : "dsl", "tail" : ": Http4sClientDsl[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.dsl", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#dsl:org.http4s.client.dsl.Http4sClientDsl[F]", "kind" : "val"}, {"member" : "pt.tecnico.dsi.openstack.common.services.Service#<init>", "error" : "unsupported entity"}, {"label" : "F", "tail" : ": Sync[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.F", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#F:cats.effect.Sync[F]", "kind" : "implicit val"}, {"label" : "client", "tail" : ": Client[F]", "member" : "pt.tecnico.dsi.openstack.common.services.Service.client", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#client:org.http4s.client.Client[F]", "kind" : "implicit val"}, {"label" : "authToken", "tail" : ": Header", "member" : "pt.tecnico.dsi.openstack.common.services.Service.authToken", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#authToken:org.http4s.Header", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pt\/tecnico\/dsi\/openstack\/common\/services\/Service.html", "kind" : "class"}]};